{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","View","imgStyle","_jsxs","className","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","MainPage","selectedChar","setSelectedChar","decoration"],"mappings":"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","file":"static/js/4.8ef25bc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} \r\n             src={img} \r\n             alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=6aeb69f0137fc73df340d0053a915bf8';\r\n    const _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n\r\n\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCath(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\n\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setSelectedChar] = useState(null);\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n                \r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"sourceRoot":""}