{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","_ref","comic","title","description","pageCount","thumbnail","language","price","_jsxs","className","children","_jsx","src","alt","Link","to","SingleComicPage","comicId","useParams","_useState","useState","_useState2","_slicedToArray","setComic","_useMarvelService","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content","_Fragment","AppBanner"],"mappings":"6MA0CMA,EAAO,SAAHC,GAAiB,IAAZC,EAAKD,EAALC,MACJC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MAE3D,OACIC,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBC,cAAA,OAAKC,IAAKP,EAAWQ,IAAKX,EAAOO,UAAU,sBAC3CD,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAC/BC,cAAA,MAAIF,UAAU,qBAAoBC,SAAER,IACpCS,cAAA,KAAGF,UAAU,sBAAqBC,SAAEP,IACpCQ,cAAA,KAAGF,UAAU,sBAAqBC,SAAEN,IACpCI,eAAA,KAAGC,UAAU,sBAAqBC,SAAA,CAAC,aAAWJ,KAC9CK,cAAA,OAAKF,UAAU,sBAAqBC,SAAEH,OAE1CI,cAACG,IAAI,CAACC,GAAG,UAAUN,UAAU,qBAAoBC,SAAC,oBAK/CM,UAnDS,WACpB,IAAOC,EAAWC,cAAXD,QACPE,EAA0BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjClB,EAAKoB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA+CC,cAAxCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAAUC,EAAUL,EAAVK,WAEjCC,qBAAU,WACNC,MACD,CAACd,IAEJ,IAAMc,EAAc,WAChBF,IACAD,EAASX,GACJe,KAAKC,IAGRA,EAAgB,SAAChC,GACnBsB,EAAStB,IAGPiC,EAAeP,EAAQhB,cAACwB,IAAY,IAAK,KACzCC,EAAUV,EAAUf,cAAC0B,IAAO,IAAK,KACjCC,EAAYZ,GAAWC,IAAU1B,EAAiC,KAAxBU,cAACZ,EAAI,CAACE,MAAOA,IAE7D,OACIO,eAAA+B,WAAA,CAAA7B,SAAA,CACIC,cAAC6B,IAAS,IACTN,EACAE,EACAE","file":"static/js/7.b2254aaa.chunk.js","sourcesContent":["import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"sourceRoot":""}